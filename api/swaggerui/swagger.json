{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Catalog API to manager products",
    "title": "Catalog API.",
    "contact": {
      "name": "Nicolas Silva",
      "email": "nicolas.senac15@gmail.com"
    },
    "version": "1.0.0"
  },
  "basePath": "/catalog-api/v1/",
  "paths": {
    "/categories/": {
      "put": {
        "description": "Update category to link with a product",
        "tags": [
          "categories"
        ],
        "summary": "Update category.",
        "operationId": "updateCategory",
        "parameters": [
          {
            "description": "request model to update category",
            "name": "UpdateCategoryRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCategoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/categoryResponse"
          }
        }
      },
      "post": {
        "description": "Create category to link with a product",
        "tags": [
          "categories"
        ],
        "summary": "Create category.",
        "operationId": "createCategory",
        "parameters": [
          {
            "description": "request model to create category",
            "name": "CreateCategorytRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCategorytRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/categoryResponse"
          }
        }
      }
    },
    "/health-check/": {
      "get": {
        "description": "Consult if api its alive",
        "tags": [
          "health-check"
        ],
        "summary": "Health Check.",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "$ref": "#/responses/helthCheckResponse"
          }
        }
      }
    },
    "/products/": {
      "put": {
        "description": "Update product in catalog",
        "tags": [
          "products"
        ],
        "summary": "Update product.",
        "operationId": "updateProduct",
        "parameters": [
          {
            "description": "request model to update product",
            "name": "UpdateProductRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProductRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/productResponse"
          }
        }
      },
      "post": {
        "description": "Create product in catalog",
        "tags": [
          "products"
        ],
        "summary": "Create product.",
        "operationId": "createProduct",
        "parameters": [
          {
            "description": "request model to create product",
            "name": "CreateProductRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProductRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/productResponse"
          }
        }
      }
    },
    "/products/active/": {
      "put": {
        "description": "If product its active this enpoint can inactive",
        "tags": [
          "products"
        ],
        "summary": "Active product.",
        "operationId": "activeProduct",
        "parameters": [
          {
            "description": "request model to inactive product",
            "name": "InactiveProductRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InactiveProductRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/productResponse"
          }
        }
      }
    },
    "/products/skus/": {
      "put": {
        "description": "Update a product variation",
        "tags": [
          "skus"
        ],
        "summary": "Update sku",
        "operationId": "updateSku",
        "parameters": [
          {
            "description": "request model to update sku",
            "name": "UpdateSkuRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSkuRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/productResponse"
          }
        }
      },
      "post": {
        "description": "Create a product variation",
        "tags": [
          "skus"
        ],
        "summary": "Create sku.",
        "operationId": "createSku",
        "parameters": [
          {
            "description": "request model to create sku",
            "name": "CreateSkuRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSkuRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/productResponse"
          }
        }
      }
    },
    "/products/skus/remove/": {
      "put": {
        "description": "Remove a product variation",
        "tags": [
          "skus"
        ],
        "summary": "Remove sku.",
        "operationId": "RemoveSku",
        "parameters": [
          {
            "description": "request model to create sku",
            "name": "RemoveSkuRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveSkuRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/productResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "ActiveProductRequest": {
      "description": "ActiveProductRequest request type",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "identification to active product",
          "type": "string",
          "x-go-name": "ID"
        }
      },
      "x-go-package": "github.com/NicolasDeveloper/store-catalog-api/api/controllers/requests"
    },
    "CategoryResponse": {
      "description": "CategoryResponse category view model",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "parent_category_id": {
          "type": "string",
          "x-go-name": "ParentCategoryID"
        }
      },
      "x-go-package": "github.com/NicolasDeveloper/store-catalog-api/api/controllers/responses"
    },
    "CreateCategorytRequest": {
      "description": "CreateCategorytRequest for creation of product",
      "type": "object",
      "required": [
        "name",
        "path"
      ],
      "properties": {
        "name": {
          "description": "this field will appear in the catalog section title",
          "type": "string",
          "x-go-name": "Name"
        },
        "parent_category_id": {
          "description": "this field will be used to link categories tree",
          "type": "string",
          "x-go-name": "ParentCategoryID"
        },
        "path": {
          "description": "this field will be used to find a specific category in URI",
          "type": "string",
          "uniqueItems": true,
          "x-go-name": "Path"
        }
      },
      "x-go-package": "github.com/NicolasDeveloper/store-catalog-api/api/controllers/requests"
    },
    "CreateProductRequest": {
      "description": "CreateProductRequest request model",
      "type": "object",
      "required": [
        "name",
        "description",
        "categories"
      ],
      "properties": {
        "categories": {
          "description": "this field will be used to link product with categories",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Categories"
        },
        "description": {
          "description": "product description",
          "type": "string",
          "x-go-name": "Description"
        },
        "name": {
          "description": "product name",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/NicolasDeveloper/store-catalog-api/api/controllers/requests"
    },
    "CreateSkuRequest": {
      "description": "CreateSkuRequest create product variation",
      "type": "object",
      "properties": {
        "name": {
          "description": "variation name",
          "type": "string",
          "x-go-name": "Name"
        },
        "price": {
          "description": "price of product",
          "type": "number",
          "format": "double",
          "x-go-name": "Price"
        },
        "product_id": {
          "description": "product reference",
          "type": "string",
          "x-go-name": "ProductID"
        },
        "quantity": {
          "description": "quantity of product",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Quantity"
        }
      },
      "x-go-package": "github.com/NicolasDeveloper/store-catalog-api/api/controllers/requests"
    },
    "HelthCheckResponse": {
      "description": "HelthCheckResponse response",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "version": {
          "type": "string",
          "x-go-name": "Version"
        }
      },
      "x-go-package": "github.com/NicolasDeveloper/store-catalog-api/api/controllers/responses"
    },
    "InactiveProductRequest": {
      "description": "InactiveProductRequest request type",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "product identification",
          "type": "string",
          "x-go-name": "ID"
        }
      },
      "x-go-package": "github.com/NicolasDeveloper/store-catalog-api/api/controllers/requests"
    },
    "ProductResponse": {
      "description": "ProductResponse product view model",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "skus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuResponse"
          },
          "x-go-name": "Skus"
        }
      },
      "x-go-package": "github.com/NicolasDeveloper/store-catalog-api/api/controllers/responses"
    },
    "RemoveSkuRequest": {
      "description": "RemoveSkuRequest update product variation",
      "type": "object",
      "properties": {
        "product_id": {
          "description": "product reference",
          "type": "string",
          "x-go-name": "ProductID"
        },
        "sku_id": {
          "description": "sku reference",
          "type": "string",
          "x-go-name": "SkuID"
        }
      },
      "x-go-package": "github.com/NicolasDeveloper/store-catalog-api/api/controllers/requests"
    },
    "ResponseData": {
      "description": "ResponseData object response",
      "type": "object",
      "properties": {
        "data": {
          "description": "generic response data",
          "type": "object",
          "x-go-name": "Data"
        },
        "success": {
          "description": "this field indicates if everything has gone with success",
          "type": "boolean",
          "x-go-name": "Success"
        }
      },
      "x-go-package": "github.com/NicolasDeveloper/store-catalog-api/api/controllers/responses"
    },
    "SkuResponse": {
      "description": "SkuResponse sku response model\nswagger: models",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "price": {
          "type": "number",
          "format": "double",
          "x-go-name": "Price"
        },
        "quantity": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Quantity"
        }
      },
      "x-go-package": "github.com/NicolasDeveloper/store-catalog-api/api/controllers/responses"
    },
    "UpdateCategoryRequest": {
      "description": "UpdateCategoryRequest Update category",
      "type": "object",
      "required": [
        "name",
        "path",
        "id"
      ],
      "properties": {
        "id": {
          "description": "category identification",
          "type": "string",
          "x-go-name": "ID"
        },
        "name": {
          "description": "this field will appear in the catalog section title",
          "type": "string",
          "x-go-name": "Name"
        },
        "parent_category_id": {
          "description": "this field will be used to link categories tree",
          "type": "string",
          "x-go-name": "ParentCategoryID"
        },
        "path": {
          "description": "this field will be used to find a specific category in URI",
          "type": "string",
          "uniqueItems": true,
          "x-go-name": "Path"
        }
      },
      "x-go-package": "github.com/NicolasDeveloper/store-catalog-api/api/controllers/requests"
    },
    "UpdateProductRequest": {
      "description": "UpdateProductRequest Update product",
      "type": "object",
      "required": [
        "name",
        "description",
        "categories",
        "id"
      ],
      "properties": {
        "categories": {
          "description": "this field will be used to link product with categories",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Categories"
        },
        "description": {
          "description": "product description",
          "type": "string",
          "x-go-name": "Description"
        },
        "id": {
          "description": "category identification",
          "type": "string",
          "x-go-name": "ID"
        },
        "name": {
          "description": "product name",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/NicolasDeveloper/store-catalog-api/api/controllers/requests"
    },
    "UpdateSkuRequest": {
      "description": "UpdateSkuRequest update product variation",
      "type": "object",
      "properties": {
        "name": {
          "description": "variation name",
          "type": "string",
          "x-go-name": "Name"
        },
        "price": {
          "description": "price of product",
          "type": "number",
          "format": "double",
          "x-go-name": "Price"
        },
        "product_id": {
          "description": "product reference",
          "type": "string",
          "x-go-name": "ProductID"
        },
        "quantity": {
          "description": "quantity of product",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Quantity"
        },
        "sku_id": {
          "description": "sku reference",
          "type": "string",
          "x-go-name": "SkuID"
        }
      },
      "x-go-package": "github.com/NicolasDeveloper/store-catalog-api/api/controllers/requests"
    }
  },
  "responses": {
    "categoryResponse": {
      "description": "ResponseData response payload",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/CategoryResponse"
          },
          "success": {
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "defaultResponse": {
      "description": "ResponseData response payload",
      "schema": {
        "$ref": "#/definitions/ResponseData"
      }
    },
    "helthCheckResponse": {
      "description": "HelthCheckResponse payload response",
      "schema": {
        "$ref": "#/definitions/HelthCheckResponse"
      },
      "headers": {
        "Body": {}
      }
    },
    "productResponse": {
      "description": "ResponseData response payload",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/ProductResponse"
          },
          "success": {
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    }
  }
}